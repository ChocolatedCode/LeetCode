# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        Lst = []
        while head:
            Lst.append(head.val)
            head = head.next
      
        N = len(Lst)
              
        if N == 1 and n == 1:
            return None
        
        LstNode = ListNode(Lst[0], None)
        res = LstNode

        for i in range(1,N):
            print(i, N-n)
            if i == N - n:
                i+=1
            else:
                LstNode.next = ListNode(Lst[i],None)
                LstNode = LstNode.next    
                
        print('res : ', res)
        return res
		
		
		
		